version: '3.8'
services:
  mongo:
    image: mongo:4.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ${PROJECT_HOME}/mongo/data:/data/db
    networks:
      - bdfi_practica_final

  mongo-seed:
    image: mongo:4.0
    container_name: mongo-seed
    command: /home/import_distances.sh
    volumes:
      - ${PROJECT_HOME}/mongo/scripts:/home
    networks:
      - bdfi_practica_final

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - bdfi_practica_final

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - bdfi_practica_final

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "7077:7077"
      - "9001:9001"
      - "8079:8080"
    environment:
      - "PROJECT_HOME=${PROJECT_HOME}"
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-master"
    volumes:
      - ${PROJECT_HOME}:${PROJECT_HOME}
    networks:
      - bdfi_practica_final

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "PROJECT_HOME=${PROJECT_HOME}"
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==spark-worker"
    volumes:
      - ${PROJECT_HOME}:${PROJECT_HOME}
    networks:
      - bdfi_practica_final

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "PROJECT_HOME=${PROJECT_HOME}"
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "constraint:node==spark-master"
    volumes:
      - ${PROJECT_HOME}:${PROJECT_HOME}
    networks:
      - bdfi_practica_final

  spark-submit:
    image: bde2020/spark-submit:3.3.0-hadoop3.3
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
    ports:
      - "4040:4040"
    environment:
      - "PROJECT_HOME=${PROJECT_HOME}"
      - "SPARK_MASTER=${SPARK_MASTER}"
      - "constraint:node==spark-master"
    command: bash -c "sleep 15; /spark/bin/spark-submit --class es.upm.dit.ging.predictor.MakePrediction --master spark://spark-master:7077 --packages org.mongodb.spark:mongo-spark-connector_2.12:10.1.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0 ${PROJECT_HOME}/flight_prediction/target/scala-2.12/flight_prediction_2.12-0.1.jar"
    volumes:
      - ${PROJECT_HOME}:${PROJECT_HOME}
    networks:
      - bdfi_practica_final

  flask:
    image: alexfg2105/flask:0.0.1
    container_name: flask
    depends_on:
      - kafka
    ports:
      - "5001:5001"
    command: ["bash", "-c", "sleep 30 && python3.7 ${PROJECT_HOME}/resources/web/predict_flask.py"]
    volumes:
      - ${PROJECT_HOME}:${PROJECT_HOME}
    networks:
      - bdfi_practica_final
networks:
  bdfi_practica_final:
    driver: bridge
